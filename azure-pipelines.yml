# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - dikshita

pool:
  vmImage: 'ubuntu-latest'

steps:
  # Step 1: Set up Node.js (v18.x)
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Set up Node.js 18.x'

  # Step 2: Install dependencies and build the React app
  - script: |
      npm install
      npm run build
    displayName: 'Install and Build React App'
    env:
      NEXT_PUBLIC_SUPABASE_URL: $(NEXT_PUBLIC_SUPABASE_URL)
      NEXT_PUBLIC_SUPABASE_ANON_KEY: $(NEXT_PUBLIC_SUPABASE_ANON_KEY)
      SUPABASE_SERVICE_ROLE_KEY: $(SUPABASE_SERVICE_ROLE_KEY)
      REPLICATE_API_TOKEN: $(REPLICATE_API_TOKEN)

  # Step 4: Log in to Docker Hub
  - task: Docker@2
    inputs:
      containerRegistry: 'DockerHubConnection'  # Replace with your Docker Hub service connection name
      command: 'login'

  # Step 5: Build and Push Docker image to Docker Hub
  - task: Docker@2
    inputs:
      containerRegistry: 'DockerHubConnection'
      repository: 'disidesh/emoji-maker'  # Replace with your Docker Hub username and repository name
      command: 'buildAndPush'
      Dockerfile: 'emojigenerator/Dockerfile'  # Path to your Dockerfile
      tags: |
        latest
        $(Build.BuildId)


