trigger:
  branches:
    include:
      - dikshita

pool:
  vmImage: 'ubuntu-latest'

steps:
  # Step 1: Set up Node.js (v18.x)
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Set up Node.js 18.x'

  # Step 2: Install dependencies and build the React app
  - script: |
      npm install
      npm run build
    displayName: 'Install and Build React App'
    env:
      NEXT_PUBLIC_SUPABASE_URL: $(NEXT_PUBLIC_SUPABASE_URL)
      NEXT_PUBLIC_SUPABASE_ANON_KEY: $(NEXT_PUBLIC_SUPABASE_ANON_KEY)
      SUPABASE_SERVICE_ROLE_KEY: $(SUPABASE_SERVICE_ROLE_KEY)
      REPLICATE_API_TOKEN: $(REPLICATE_API_TOKEN)

  # Step 3: Encode sensitive tokens (Base64 encoding)
  - script: |
      export NEXT_PUBLIC_SUPABASE_URL_BASE64=$(echo -n $(NEXT_PUBLIC_SUPABASE_URL) | base64)
      export NEXT_PUBLIC_SUPABASE_ANON_KEY_BASE64=$(echo -n $(NEXT_PUBLIC_SUPABASE_ANON_KEY) | base64)
      export SUPABASE_SERVICE_ROLE_KEY_BASE64=$(echo -n $(SUPABASE_SERVICE_ROLE_KEY) | base64)
      export REPLICATE_API_TOKEN_BASE64=$(echo -n $(REPLICATE_API_TOKEN) | base64)
      echo "Tokens and keys have been encoded in Base64."
    displayName: 'Encode Tokens and Keys in Base64'

  # Step 4: Log in to Docker Hub
  - task: Docker@2
    inputs:
      containerRegistry: 'DockerHubConnection'  # Replace with your Docker Hub service connection name
      command: 'login'

  # Step 5: Build and Push Docker image to Docker Hub
  - task: Docker@2
    inputs:
      containerRegistry: 'DockerHubConnection'
      repository: 'disidesh/emoji-maker'  # Replace with your Docker Hub username and repository name
      command: 'buildAndPush'
      Dockerfile: 'Dockerfile'  # Path to your Dockerfile
      tags: |
        latest
        $(Build.BuildId)
      arguments: |
        --build-arg NEXT_PUBLIC_SUPABASE_URL=$(NEXT_PUBLIC_SUPABASE_URL_BASE64) \
        --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY=$(NEXT_PUBLIC_SUPABASE_ANON_KEY_BASE64) \
        --build-arg SUPABASE_SERVICE_ROLE_KEY=$(SUPABASE_SERVICE_ROLE_KEY_BASE64) \
        --build-arg REPLICATE_API_TOKEN=$(REPLICATE_API_TOKEN_BASE64)
